local EventManager = require('ge_tts.EventManager')
local Json = require('ge_tts.Json')
local TableUtil = require('sebaestschjin-tts.TableUtil')

local Savefile = require("gloomhaven-campaign-manager.Savefile")
local Task = require('gloomhaven-campaign-manager.Task')
local Character = require('gloomhaven-campaign-manager.Character')
local Preparation = require('gloomhaven-campaign-manager.Preparation')
local Scenario = require('gloomhaven-campaign-manager.Scenario')

-- 2163619993
local CampaignManager = {}

---@type number[]
CampaignManager.VERSION = { 2, 5, 0 }

function CampaignManager.replaceComponents()
    Preparation.replaceComponents()
end

function CampaignManager.loadAll()
    local savefile = Savefile.load()
    if savefile then
        Preparation.prepareLoad(--[[---@not nil]] savefile)
    end
end

---@type string[]
local requiredForSave = {}

function CampaignManager.saveAll()
    requiredForSave = { Task.Event.Saved.Achievements,
                        Task.Event.Saved.Items,
                        Task.Event.Saved.Options,
                        Task.Event.Saved.Extensions }

    for _, required in ipairs(requiredForSave) do
        EventManager.addHandler(required, function(savefile)
            CampaignManager.tryFinishSave(required, savefile)
        end)
    end

    local savefile = Savefile.create()
    Preparation.prepareSave(savefile)
end

---@param event string
---@param savefile gh_Savefile
function CampaignManager.tryFinishSave(event, savefile)
    TableUtil.removeValue(requiredForSave, event)

    if TableUtil.isEmpty(requiredForSave) then
        Savefile.save(savefile)
        local scenarioTree = Scenario.saveScenarioTree(savefile)
        Savefile.saveScenarioTree(scenarioTree)
    end
end

function CampaignManager.upgradeSavefile()
    local savefile = Savefile.load()
    if savefile then
        Savefile.save(--[[---@not nil]] savefile)
    end
end

---@shape gh_Func_packCharacter
---@field player number

--- Called from the replaced "Remove Character" button
---@param parameters gh_Func_packCharacter
function packCharacter(parameters)
    Character.packCharacterBox(parameters.player)
end

---@shape gh_Func_unpackCharacter
---@field guid GUID the GUID of the bag containing the character
---@field character string the character data as a string (of type gh_Save_Character)

--- Called from the "Unpack" button on packed characters
---@param parameters gh_Func_unpackCharacter
function unpackCharacter(parameters)
    Character.unpackInactiveCharacterBox(parameters.guid, Json.decode(parameters.character))
end

return CampaignManager
